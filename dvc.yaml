vars:
  - docker_workdir: /usr/src/app
  - docker_datasets_dir: /usr/src/datasets
  - YOLOV5_IMAGE: yolov5-dvc:latest

stages:

  download_model:
    params:
      - train
    cmd:
    - |
      docker run \
        -v "$(pwd)"/models/weights:${docker_workdir}/models/weights \
        ${YOLOV5_IMAGE} \
        python3 -c "from utils.downloads import attempt_download; attempt_download(f'models/weights/${train.weights}')"
    outs:
      - models/weights/${train.weights}:
          cache: false

  train:
    params:
      - train
    cmd: >- 
      docker run
      -v "$(pwd)"/data_configs:${docker_workdir}/data_configs
      -v ${data.datasets_dir}:${docker_datasets_dir}
      -v "$(pwd)"/models/weights:${docker_workdir}/models/weights
      -v "$(pwd)"/runs:${docker_workdir}/runs 
      ${YOLOV5_IMAGE} 
      python3 train.py 
      --data ${data.data_configs_dir}/${data.data_train}.yaml
      --weights ${train.weights_dir}/${train.weights} 
      --hyp ${train.hyp} 
      --epochs ${train.epochs} 
      --batch-size ${train.batch_size} 
      --img-size ${train.img_size} 
      --optimizer ${train.optimizer} 
      --workers ${train.workers} 
      --project ${train.project} 
      --name ''
      --label-smoothing ${train.label_smoothing} 
      --save-period ${train.save_period} 
      --entity ${train.entity} 
      --bbox_interval ${train.bbox_interval} 
      --artifact_alias ${train.artifact_alias}
      ${train.yolo_flags}
    deps:
      - models/weights/${train.weights}
    outs:
      - ${train.project}/weights/last.pt
      - ${train.project}/weights/best.pt
    metrics:
      - ${train.project}/results.csv:
          cache: false
      - ${train.project}/hyp.yaml:
          cache: false
    plots:
      - ${train.project}/confusion_matrix.png:
          cache: false
      - ${train.project}/F1_curve.png:
          cache: false
      - ${train.project}/labels_correlogram.jpg:
          cache: false
      - ${train.project}/labels.jpg:
          cache: false
      - ${train.project}/P_curve.png:
          cache: false
      - ${train.project}/PR_curve.png:
          cache: false
      - ${train.project}/R_curve.png:
          cache: false
      - ${train.project}/results.png:
          cache: false

  val:
    cmd: >- 
      docker run --ipc=host
      -v "$(pwd)"/data_configs:${docker_workdir}/data_configs
      -v ${data.datasets_dir}:${docker_datasets_dir}
      -v "$(pwd)"/runs:${docker_workdir}/runs 
      ${YOLOV5_IMAGE}
      python3 val.py
      --data ${data.data_configs_dir}/${data.data_val}.yaml
      --weights ${train.project}/weights/best.pt
      --batch-size  ${val.batch_size}
      --img-size ${val.img_size}
      --conf-thres ${val.conf_thres}
      --iou-thres ${val.iou_thres}
      --max-det ${val.max_det}
      --task val
      --project ${val.project}
      --name ''
      ${val.yolo_flags}
    params:
      - val
    deps: 
      - ${train.project}/weights/best.pt
    outs:
      - ${val.project}/best_predictions.json:
          cache: false
    plots:
      - ${val.project}/confusion_matrix.png:
          cache: false
      - ${val.project}/F1_curve.png:
          cache: false
      - ${val.project}/P_curve.png:
          cache: false
      - ${val.project}/PR_curve.png:
          cache: false
      - ${val.project}/R_curve.png:
          cache: false

  exports:
    foreach: ${export.formats}
    do:
      cmd: >- 
        docker run --ipc=host 
        -v ${data.datasets_dir}:${docker_datasets_dir}
        -v "$(pwd)"/runs:${docker_workdir}/runs 
        ${YOLOV5_IMAGE}
        python3 export.py 
        --data ${data.data_configs_dir}/${data.data_export}.yaml
        --weights ${train.project}/weights/best.pt
        --img-size ${export.img_size}
        --batch-size  ${export.batch_size}
        --opset ${export.opset}
        --topk-per-class ${export.topk_per_class}
        --topk-all ${export.topk_all}
        --iou-thres ${export.iou_thres}
        --conf-thres ${export.conf_thres}
        --include ${item.name}
        ${export.yolo_flags}
      deps:
        - ${train.project}/weights/best.pt
      outs:
        - ${train.project}/weights/best.${item.ext}
